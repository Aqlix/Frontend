{"ast":null,"code":"var _jsxFileName = \"D:\\\\FormApp\\\\Frontend\\\\myform\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    fullName: '',\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [userId, setUserId] = useState(null); // State to store the user ID\n  const [savedUsers, setSavedUsers] = useState([]); // State to store saved user data array\n  const [updateStatus, setUpdateStatus] = useState(''); // State to store the update status\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  const handleSave = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      console.log('User saved:', data);\n\n      // Set the user ID and saved user data to the array\n      setUserId(data._id);\n      setSavedUsers([...savedUsers, data]);\n\n      // Reset the form fields\n      setUserData({\n        fullName: '',\n        username: '',\n        email: '',\n        password: ''\n      });\n\n      // Clear the update status\n      setUpdateStatus('');\n    } catch (error) {\n      console.error('Error saving user:', error);\n    }\n  };\n  const handleUpdate = async () => {\n    try {\n      if (!userId) {\n        console.error('User ID not available.');\n        return;\n      }\n      const response = await fetch(`http://localhost:5000/user/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      console.log('User updated:', data);\n\n      // Update the update status\n      setUpdateStatus('User updated successfully');\n\n      // Clear the saved user data\n      setSavedUsers(savedUsers.map(user => user._id === userId ? data : user));\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n  const handleUpdateUser = user => {\n    // Set the user data in the form for editing\n    setUserData({\n      fullName: user.fullName,\n      username: user.username,\n      email: user.email,\n      password: user.password\n    });\n\n    // Set the user ID for updating\n    setUserId(user._id);\n\n    // Clear the update status\n    setUpdateStatus('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fullName\",\n        value: userData.fullName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: userData.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: userData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: userData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSave,\n      children: \"Save User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn2\",\n      onClick: handleUpdate,\n      children: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), savedUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-users\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Saved Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), savedUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Full Name: \", user.fullName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Password: \", user.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-update\",\n          onClick: () => handleUpdateUser(user),\n          children: \"Update User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), updateStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7JTXk8i2TiX2dlIx7HvYLT19BDM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","userData","setUserData","fullName","username","email","password","userId","setUserId","savedUsers","setSavedUsers","updateStatus","setUpdateStatus","handleChange","e","name","value","target","handleSave","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","_id","error","handleUpdate","map","user","handleUpdateUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","length","index","_c","$RefreshReg$"],"sources":["D:/FormApp/Frontend/myform/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [userData, setUserData] = useState({\n    fullName: '',\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  const [userId, setUserId] = useState(null); // State to store the user ID\n  const [savedUsers, setSavedUsers] = useState([]); // State to store saved user data array\n  const [updateStatus, setUpdateStatus] = useState(''); // State to store the update status\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const handleSave = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n\n      const data = await response.json();\n      console.log('User saved:', data);\n\n      // Set the user ID and saved user data to the array\n      setUserId(data._id);\n      setSavedUsers([...savedUsers, data]);\n\n      // Reset the form fields\n      setUserData({\n        fullName: '',\n        username: '',\n        email: '',\n        password: ''\n      });\n\n      // Clear the update status\n      setUpdateStatus('');\n    } catch (error) {\n      console.error('Error saving user:', error);\n    }\n  };\n\n  const handleUpdate = async () => {\n    try {\n      if (!userId) {\n        console.error('User ID not available.');\n        return;\n      }\n\n      const response = await fetch(`http://localhost:5000/user/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n\n      const data = await response.json();\n      console.log('User updated:', data);\n\n      // Update the update status\n      setUpdateStatus('User updated successfully');\n\n      // Clear the saved user data\n      setSavedUsers(savedUsers.map(user => (user._id === userId ? data : user)));\n    } catch (error) {\n      console.error('Error updating user:', error);\n    }\n  };\n\n  const handleUpdateUser = (user) => {\n    // Set the user data in the form for editing\n    setUserData({\n      fullName: user.fullName,\n      username: user.username,\n      email: user.email,\n      password: user.password\n    });\n\n    // Set the user ID for updating\n    setUserId(user._id);\n\n    // Clear the update status\n    setUpdateStatus('');\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>User Management</h1>\n      <div className=\"form-group\">\n        <label>Full Name:</label>\n        <input type=\"text\" name=\"fullName\" value={userData.fullName} onChange={handleChange} />\n      </div>\n      <div className=\"form-group\">\n        <label>Username:</label>\n        <input type=\"text\" name=\"username\" value={userData.username} onChange={handleChange} />\n      </div>\n      <div className=\"form-group\">\n        <label>Email:</label>\n        <input type=\"text\" name=\"email\" value={userData.email} onChange={handleChange} />\n      </div>\n      <div className=\"form-group\">\n        <label>Password:</label>\n        <input type=\"text\" name=\"password\" value={userData.password} onChange={handleChange} />\n      </div>\n\n      <button className=\"btn\" onClick={handleSave}>\n        Save User\n      </button>\n      <button className=\"btn btn2\" onClick={handleUpdate}>\n        Update User\n      </button>\n\n      {/* Display saved user data */}\n      {savedUsers.length > 0 && (\n        <div className=\"saved-users\">\n          <h2>Saved Users</h2>\n          {savedUsers.map((user, index) => (\n            <div key={index} className=\"user-post\">\n              <p>Full Name: {user.fullName}</p>\n              <p>Username: {user.username}</p>\n              <p>Email: {user.email}</p>\n              <p>Password: {user.password}</p>\n              <button className=\"btn btn-update\" onClick={() => handleUpdateUser(user)}>\n                Update User\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Display update status */}\n      {updateStatus && (\n        <div className=\"update-status\">\n          <h2>Update Status</h2>\n          <p>{updateStatus}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}